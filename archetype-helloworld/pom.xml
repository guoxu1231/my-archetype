<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
        >
    <modelVersion>4.0.0</modelVersion>
    <artifactId>archetype-helloworld</artifactId>
    <packaging>jar</packaging>
    <version>0.5</version>
    <name>archetype-helloworld</name>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- AssertJ is not a part of Spring IO platform, so the version must be provided explicitly -->
        <assertj-core-version>3.1.0</assertj-core-version>
        <scala.version>2.11.8</scala.version>
        <scala.version.short>2.11</scala.version.short>
        <cxf.version>3.1.4</cxf.version>
        <org.jooq.version>3.9.2</org.jooq.version>
        <kotlin.version>1.1.2</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
    </properties>
    <parent>
        <groupId>dominus</groupId>
        <artifactId>my-archetype</artifactId>
        <version>0.0.2</version>
    </parent>

    <profiles>
        <profile>
            <id>java</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>

                <dependency>
                    <groupId>dominus</groupId>
                    <artifactId>archetype-common</artifactId>
                    <version>0.9</version>
                </dependency>

                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-test-junit</artifactId>
                    <version>${kotlin.version}</version>
                    <scope>test</scope>
                </dependency>

                <!--Utility -->
                <!-- Google Core Libraries for Java
                http://google.github.io/guava/releases/19.0/api/docs/-->
                <dependency>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                    <version>19.0</version>
                </dependency>

                <dependency>
                    <groupId>joda-time</groupId>
                    <artifactId>joda-time</artifactId>
                    <version>2.9.4</version>
                </dependency>
                <dependency>
                    <groupId>io.reactivex.rxjava2</groupId>
                    <artifactId>rxjava</artifactId>
                    <version>2.1.0</version>
                </dependency>


                <!-- EE:Spring -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-core</artifactId>
                    <version>${spring.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>commons-logging</groupId>
                            <artifactId>commons-logging</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jdbc</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.batch</groupId>
                    <artifactId>spring-batch-core</artifactId>
                    <version>3.0.6.RELEASE</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-web</artifactId>
                    <version>${spring.version}</version>
                </dependency>

                <!-- EE: JSON Bingding-->
                <dependency>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                    <version>2.9.10.7</version>
                </dependency>
                <!-- EE: AVRO Binding -->
                <dependency>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro</artifactId>
                    <version>1.8.1</version>
                    <!--<exclusions>-->
                        <!--<exclusion>-->
                            <!--<groupId>org.codehaus.jackson</groupId>-->
                            <!--<artifactId>jackson-core-asl</artifactId>-->
                        <!--</exclusion>-->
                        <!--<exclusion>-->
                            <!--<groupId>org.codehaus.jackson</groupId>-->
                            <!--<artifactId>jackson-mapper-asl</artifactId>-->
                        <!--</exclusion>-->
                    <!--</exclusions>-->
                </dependency>
                <dependency>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                    <version>3.0.0</version>
                </dependency>

                <!-- JMS -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-jms</artifactId>
                    <version>${spring.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.activemq</groupId>
                    <artifactId>activemq-broker</artifactId>
                    <version>5.10.2</version>
                </dependency>
                <!--EE: rabbitmq -->
                <dependency>
                    <groupId>com.rabbitmq</groupId>
                    <artifactId>amqp-client</artifactId>
                    <version>3.6.5</version>
                </dependency>

                <!--<dependency>-->
                <!--<groupId>org.apache.activemq</groupId>-->
                <!--<artifactId>activemq-pool</artifactId>-->
                <!--</dependency>-->
                <!--<dependency>-->
                <!--<groupId>org.apache.activemq</groupId>-->
                <!--<artifactId>activemq-jms-pool</artifactId>-->
                <!--</dependency>-->

                <!-- Zookeeper, 3.3.1 is used in org.I0Itec.zkclient 0.4
                     Zookeeper, 3.4.6 is used in org.I0Itec.zkclient 0.7
                -->
                <dependency>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                    <version>3.4.6</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <!-- EE: Apache Kafka begin
                scala2.11 java.lang.NoSuchMethodError: scala.Predef$.ArrowAssoc(Ljava/lang/Object;)Ljava/lang/Object;
                -->
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka_2.11</artifactId>
                    <version>0.10.0.0</version>
                    <scope>compile</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-clients</artifactId>
                    <version>0.10.0.0</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scala.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-streams</artifactId>
                    <version>0.10.0.0</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <!--<dependency>-->
                    <!--<groupId>io.confluent</groupId>-->
                    <!--<artifactId>kafka-avro-serializer</artifactId>-->
                    <!--<version>3.0.0</version>-->
                    <!--<exclusions>-->
                        <!--<exclusion>-->
                            <!--<groupId>org.slf4j</groupId>-->
                            <!--<artifactId>slf4j-log4j12</artifactId>-->
                        <!--</exclusion>-->
                    <!--</exclusions>-->
                <!--</dependency>-->
                <!-- EE: Apache Kafka end -->
                <!-- 0.4 with kafka 0.8.2.2, 0.7 with kafka 0.9-->
                <dependency>
                    <groupId>com.101tec</groupId>
                    <artifactId>zkclient</artifactId>
                    <version>0.7</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <!--EE: Apache Kafka End -->

                <!--EE: Spring-Kafka Integration-->
                <dependency>
                    <groupId>org.springframework.kafka</groupId>
                    <artifactId>spring-kafka</artifactId>
                    <version>1.0.0.BUILD-SNAPSHOT</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/spring-kafka/spring-kafka-1.0.0.BUILD-SNAPSHOT.jar</systemPath>
                </dependency>

                <!--memcached client -->
                <dependency>
                    <groupId>net.spy</groupId>
                    <artifactId>spymemcached</artifactId>
                    <version>2.12.0</version>
                    <scope>compile</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-core</artifactId>
                    <version>2.0.4</version>
                </dependency>

                <!-- Distributed Coordination -->
                <dependency>
                    <groupId>org.apache.curator</groupId>
                    <artifactId>curator-recipes</artifactId>
                    <version>2.9.0</version>
                </dependency>

                <!-- JDBC -->
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-dbcp2</artifactId>
                    <version>2.1.1</version>
                </dependency>
                <!-- JDBC Mybatis -->
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis</artifactId>
                    <version>3.3.0</version>
                </dependency>

                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.37</version>
                </dependency>

                <!--EE JOOQ(Java Object Oriented Querying) Open Source Edition-->
                <dependency>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq</artifactId>
                    <version>${org.jooq.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-meta</artifactId>
                    <version>${org.jooq.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen</artifactId>
                    <version>${org.jooq.version}</version>
                </dependency>

                <dependency>
                    <groupId>oracle.jdbc</groupId>
                    <artifactId>ojdbc</artifactId>
                    <version>6</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/ojdbc/ojdbc6.jar</systemPath>
                    <!-- must match file name -->
                </dependency>

                <!--EE: mongodb -->
                <dependency>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                    <version>3.4.1</version>
                </dependency>
                <dependency>
                    <groupId>org.springframework.data</groupId>
                    <artifactId>spring-data-mongodb</artifactId>
                    <version>1.9.6.RELEASE</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.mongodb</groupId>
                            <artifactId>mongo-java-driver</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.mongodb.morphia</groupId>
                    <artifactId>morphia</artifactId>
                    <version>1.3.0</version>
                </dependency>
                <dependency>
                    <groupId>org.mongodb.morphia</groupId>
                    <artifactId>morphia-logging-slf4j</artifactId>
                    <version>1.3.0</version>
                </dependency>

                <!-- EE: Redis -->
                <dependency>
                    <groupId>redis.clients</groupId>
                    <artifactId>jedis</artifactId>
                    <version>2.8.1</version>
                    <type>jar</type>
                    <scope>compile</scope>
                </dependency>

                <!-- NIO framework -->
                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                    <!-- Use 'netty-all' for 4.0 or above -->
                    <version>4.0.32.Final</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-core</artifactId>
                    <version>2.0.9</version>
                </dependency>

                <!--Groovy Shell -->
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-jsr223</artifactId>
                    <version>2.4.6</version>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>2.4.6</version>
                </dependency>

                <!--EE: CEP Esper -->
                <dependency>
                    <groupId>com.espertech</groupId>
                    <artifactId>esper</artifactId>
                    <version>6.0.1</version>
                </dependency>

                <!-- template engine -->
                <dependency>
                    <groupId>org.apache.velocity</groupId>
                    <artifactId>velocity</artifactId>
                    <version>1.7</version>
                    <exclusions>
                        <exclusion>
                            <groupId>commons-lang</groupId>
                            <artifactId>commons-lang</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <!--EE: alibaba dubbo rpc framework -->
                <!--<dependency>-->
                <!--<groupId>com.alibaba</groupId>-->
                <!--<artifactId>dubbo</artifactId>-->
                <!--<version>2.5.4-SNAPSHOT</version>-->
                <!--</dependency>-->

                <!-- persistent framework -->
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis</artifactId>
                    <version>3.2.8</version>
                </dependency>
                <dependency>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis-spring</artifactId>
                    <version>1.3.0</version>
                </dependency>
                <!-- EE:aliyun ons client-->
                <dependency>
                    <groupId>com.aliyun.openservices</groupId>
                    <artifactId>ons-client</artifactId>
                    <version>1.2.4</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/aliyun/ons/ons-client-1.2.4.jar</systemPath>
                </dependency>
                <!-- EE:ons open api management-->
                <!--<dependency>-->
                <!--<groupId>com.aliyun</groupId>-->
                <!--<artifactId>aliyun-java-sdk-ons4financehz</artifactId>-->
                <!--<version>1.1.1-SNAPSHOT</version>-->
                <!--<scope>system</scope>-->
                <!--<systemPath>${basedir}/lib/aliyun/aliyun-java-sdk-ons4financehz-1.1.1-SNAPSHOT.jar</systemPath>-->
                <!--</dependency>-->
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>aliyun-java-sdk-ons</artifactId>
                    <version>1.1.1-SNAPSHOT</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/aliyun/aliyun-java-sdk-ons-1.2.1-SNAPSHOT.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>aliyun-java-sdk-core</artifactId>
                    <version>2.4.2</version>
                </dependency>
                <!-- EE: aliyun direct mail-->
                <!--<dependency>-->
                <!--<groupId>com.aliyun</groupId>-->
                <!--<artifactId>aliyun-java-sdk-dm</artifactId>-->
                <!--<version>2.0.0-rc2</version>-->
                <!--</dependency>-->
                <dependency>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                    <version>1.4.7</version>
                </dependency>
                <!--EE: Java Mail & Scheduling Util -->
                <dependency>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context-support</artifactId>
                    <version>${spring.version}</version>
                </dependency>

                <!--EE: retry framework-->
                <dependency>
                    <groupId>org.springframework.retry</groupId>
                    <artifactId>spring-retry</artifactId>
                    <version>1.1.2.RELEASE</version>
                </dependency>

                <!--EE: httpclient -->
                <dependency>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                    <version>4.5.2</version>
                </dependency>

                <!--EE: Alidayu -->
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>alidayu</artifactId>
                    <version>auto_1455552377940-20160607</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/aliyun/alidayu/taobao-sdk-java-auto_1455552377940-20160608.jar
                    </systemPath>
                </dependency>

                <!--EE: quartz scheduler -->
                <dependency>
                    <groupId>org.quartz-scheduler</groupId>
                    <artifactId>quartz</artifactId>
                    <version>2.2.1</version>
                </dependency>

                <!--mysql binlog connector-->
                <dependency>
                    <groupId>com.github.shyiko</groupId>
                    <artifactId>mysql-binlog-connector-java</artifactId>
                    <version>0.3.1</version>
                </dependency>

                <!--EE:aliyun jingwei -->
                <!--<dependency>-->
                <!--<groupId>com.taobao.jingwei</groupId>-->
                <!--<artifactId>jingwei-core</artifactId>-->
                <!--<version>2.1.1-SNAPSHOT</version>-->
                <!--</dependency>-->

                <!-- EE: aliyun RDS -->
                <dependency>
                    <groupId>com.aliyun</groupId>
                    <artifactId>aliyun-java-sdk-rds</artifactId>
                    <version>2.0.2</version>
                </dependency>

                <!--EE: Elastic search -->
                <!--<dependency>-->
                    <!--<groupId>org.elasticsearch</groupId>-->
                    <!--<artifactId>elasticsearch</artifactId>-->
                    <!--<version>2.3.4</version>-->
                <!--</dependency>-->
                <dependency>
                    <groupId>org.elasticsearch.client</groupId>
                    <artifactId>transport</artifactId>
                    <version>5.2.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                    <version>2.9.1</version>
                </dependency>

                <!--EE: RocksDB -->
                <dependency>
                    <groupId>org.rocksdb</groupId>
                    <artifactId>rocksdbjni</artifactId>
                    <version>4.8.0</version>
                </dependency>

                <!-- EE: sql parser -->
                <dependency>
                    <groupId>com.github.jsqlparser</groupId>
                    <artifactId>jsqlparser</artifactId>
                    <version>0.9</version>
                </dependency>
                <!-- EE: H2 Database-->
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.4.192</version>
                </dependency>

                <!--EE: BPMN -->
                <dependency>
                    <groupId>org.activiti</groupId>
                    <artifactId>activiti-engine</artifactId>
                    <version>5.21.0</version>
                </dependency>

                <!--EE: Service discovery - Consul -->
                <dependency>
                    <groupId>com.orbitz.consul</groupId>
                    <artifactId>consul-client</artifactId>
                    <version>0.13.2</version>
                </dependency>

                <!-- EE: Miroservice / Feign HTTP Client / load balancing, etc -->
                <dependency>
                    <groupId>io.github.openfeign</groupId>
                    <artifactId>feign-core</artifactId>
                    <version>9.5.0</version>
                </dependency>
                <dependency>
                    <groupId>io.github.openfeign</groupId>
                    <artifactId>feign-gson</artifactId>
                    <version>9.5.0</version>
                </dependency>
                <dependency>
                    <groupId>io.github.openfeign</groupId>
                    <artifactId>feign-slf4j</artifactId>
                    <version>9.5.0</version>
                </dependency>
                <!-- EE: Miroservice / Feign - Ribbon load balancing, etc -->
                <dependency>
                    <groupId>io.github.openfeign</groupId>
                    <artifactId>feign-ribbon</artifactId>
                    <version>9.5.0</version>
                </dependency>
                <dependency>
                    <groupId>com.netflix.ribbon</groupId>
                    <artifactId>ribbon-core</artifactId>
                    <version>2.1.1</version>
                </dependency>
                <dependency>
                    <groupId>com.netflix.ribbon</groupId>
                    <artifactId>ribbon-loadbalancer</artifactId>
                    <version>2.1.1</version>
                </dependency>
                <dependency>
                    <groupId>com.squareup.okhttp3</groupId>
                    <artifactId>mockwebserver</artifactId>
                    <version>3.6.0</version>
                </dependency>
                <!-- used in ribbon-loadbalancer as runtime dependencies-->
                <dependency>
                    <groupId>com.netflix.archaius</groupId>
                    <artifactId>archaius-core</artifactId>
                    <version>0.6.6</version>
                </dependency>
                <dependency>
                    <groupId>commons-configuration</groupId>
                    <artifactId>commons-configuration</artifactId>
                    <version>1.8</version>
                </dependency>

                <!-- Google Pub/Sub-->
                <dependency>
                    <groupId>com.google.cloud</groupId>
                    <artifactId>google-cloud-pubsub</artifactId>
                    <version>0.4.0</version>
                </dependency>

                <dependency>
                    <groupId>io.dropwizard.metrics</groupId>
                    <artifactId>metrics-core</artifactId>
                    <version>3.1.0</version>
                </dependency>

                <dependency>
                    <groupId>com.github.briandilley.jsonrpc4j</groupId>
                    <artifactId>jsonrpc4j</artifactId>
                    <version>1.4.6</version>
                </dependency>

                <dependency>
                    <groupId>org.web3j</groupId>
                    <artifactId>core</artifactId>
                    <version>1.1.0</version>
                    <!--<exclusions>-->
                        <!--<exclusion>-->
                            <!--<artifactId>rxjava</artifactId>-->
                            <!--<groupId>io.reactivex</groupId>-->
                        <!--</exclusion>-->
                    <!--</exclusions>-->
                </dependency>

                <dependency>
                    <groupId>stellar</groupId>
                    <artifactId>stellar-sdk</artifactId>
                    <version>0.1.10</version>
                    <scope>system</scope>
                    <systemPath>${basedir}/lib/stellar/stellar-sdk.jar</systemPath>
                </dependency>

                <!--Swagger 2 -->
                <dependency>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-parser</artifactId>
                    <version>1.0.32</version>
                </dependency>

                <!-- JSON Web Token (JWT) -->
                <dependency>
                    <groupId>io.jsonwebtoken</groupId>
                    <artifactId>jjwt</artifactId>
                    <version>0.9.0</version>
                </dependency>

            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xms1024m -Xmx2048m</argLine>
                    <testSourceDirectory>${basedir}/src/main/java/</testSourceDirectory>
                    <testClassesDirectory>${project.build.directory}/classes/</testClassesDirectory>
                    <includes>
                        <!-- JDBC begin-->
                        <include>dominus.intg.datastore.mysql.MySqlDDLTest</include>
                        <include>dominus.intg.datastore.mysql.MySqlMetaDataTest</include>
                        <include>dominus.intg.datastore.mysql.MySqlJDBCShardTest</include>
                        <include>dominus.connector.MysqlBinlogConnectorTest</include>
                        <!--<include>dominus.framework.dao.jooq.TestJooQDSL</include>-->
                        <!-- Misc -->
                        <include>dominus.intg.scripting.GroovyIntgTest</include>
                        <include>dominus.framework.binding.TestXmlBinding</include>
                        <include>dominus.framework.binding.TestJsonBinding</include>
                        <include>dominus.framework.binding.TestProtobufBinding</include>
                        <include>dominus.framework.binding.TestAvroBinding</include>
                        <include>dominus.framework.retry.TestRetryTemplate</include>
                        <include>dominus.framework.parser.sql.TestJSqlParser</include>
                        <include>dominus.framework.metrics.TestMetricsIntg</include>
                        <include>dominus.framework.rx.TestRxJava</include>

                        <!--Groovy DSL -->
                        <include>dominus.intg.jmx.TestGroovyMBean</include>
                        <include>dominus.dsl.TestJson2XmlDSL</include>

                        <!-- RPC -->
                        <!--<include>dominus.intg.rpc.dubbo.TestDubboLocalInvoke</include>-->
                        <!-- amqp -->
                        <include>dominus.intg.message.rabbitmq.TestRabbitMQClient</include>
                        <!-- Kafka & ZK -->
                        <include>dominus.intg.message.kafka.KafkaEmbeddedServerTestCase</include>
                        <include>dominus.intg.message.kafka.KafkaProducerTestcase</include>
                        <include>dominus.intg.message.kafka.KafkaConsumerTestcase</include>
                        <include>dominus.intg.message.kafka.KafkaAdminTestCase</include>
                        <include>dominus.intg.message.kafka.TestKafkaStream</include>
                        <include>dominus.intg.message.kafka.KafkaIntgTestCase</include>
                        <!--<include>dominus.intg.jms.kafka09.SpringKafkaTestCase</include>-->
                        <!-- Datastore -->
                        <include>dominus.intg.datastore.DOCUMENT_MONGODB_TestSpringDataClient</include>
                        <include>dominus.intg.datastore.KV_REDIS_TestRedis</include>
                        <include>dominus.intg.datastore.SEARCH_ELASTICSEARCH_TestElasticSearchClient</include>
                        <include>dominus.intg.datastore.zookeeper.TestZKClient</include>
                        <include>dominus.intg.datastore.RDMS_H2_TestH2Database</include>
                        <include>dominus.intg.coordinator.consul.TestConsulClient</include>
                        <!-- CEP -->
                        <include>dominus.intg.cep.TestEsperCEP</include>
                        <!-- ORM integration -->
                        <include>dominus.intg.datastore.persistent.mybatis.TestMyBatisDao</include>
                        <!-- java language -->
                        <include>dominus.language.threads.TestSynchronizer</include>
                        <!-- kotlin language -->
                        <include>dominus.language.TestKotlinHelloWorld</include>
                        <!-- blockchain-->
                        <!--<include>dominus.intg.stellar.TestStellarClient</include>-->
                        <!--Miroservice -->
                        <include>dominus.microservice.feign.TestFeignClient</include>
                        <!-- spec -->
                        <include>dominus.spec.TestSwaggerParser</include>
                        <include>dominus.spec.TestJJWT</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <configuration/>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>process-test-sources</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>2.2</version>
                <executions>
                    <execution>
                        <id>xjc</id>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <sourceType>xmlschema</sourceType>
                    <!-- The package of your generated sources -->
                    <packageName>dominus.framework.binding.bean</packageName>
                    <sources>
                        <source>src/main/resources/data/xml/Person.xsd</source>
                    </sources>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${basedir}/src/main/groovy"/>
                                <taskdef name="groovyc"
                                         classname="org.codehaus.groovy.ant.Groovyc">
                                    <classpath refid="maven.compile.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.outputDirectory}"/>
                                <groovyc destdir="${project.build.outputDirectory}"
                                         srcdir="${basedir}/src/main/groovy/" listfiles="true">
                                    <classpath refid="maven.compile.classpath"/>
                                </groovyc>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Protocol Buffers Plugin uses Protocol Buffer Compiler (protoc) tool to generate Java source files from .proto (protocol buffer definition) files for the specified project. -->
            <!-- https://www.xolstice.org/protobuf-maven-plugin/usage.html -->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.5.0</version>
                <configuration>
                    <protocExecutable>${basedir}/lib/protoc-3.0.0/bin/protoc</protocExecutable>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- The jOOQ code generator plugin -->
            <!--<plugin>-->
                <!--<groupId>org.jooq</groupId>-->
                <!--<artifactId>jooq-codegen-maven</artifactId>-->
                <!--<version>${org.jooq.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>generate-mysql</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>generate</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->

                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<version>5.1.37</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->

                <!--<configuration>-->
                    <!--<jdbc>-->
                        <!--<driver>com.mysql.jdbc.Driver</driver>-->
                        <!--<url>jdbc:mysql://127.0.0.1/employees</url>-->
                        <!--<user>root</user>-->
                        <!--<password></password>-->
                    <!--</jdbc>-->
                    <!--<generator>-->
                        <!--<database>-->
                            <!--<name>org.jooq.util.mysql.MySQLDatabase</name>-->
                            <!--<includes>.*</includes>-->
                            <!--<excludes></excludes>-->
                            <!--<inputSchema>employees</inputSchema>-->
                        <!--</database>-->
                        <!--<target>-->
                            <!--<packageName>dominus.framework.dao.jooq.db</packageName>-->
                            <!--<directory>target/generated-sources/jooq-mysql</directory>-->
                        <!--</target>-->
                    <!--</generator>-->
                <!--</configuration>-->
            <!--</plugin>-->


        </plugins>
    </build>

</project>
